"use strict";(self.webpackChunk_planyway_planyway=self.webpackChunk_planyway_planyway||[]).push([[215],{43611:(e,r,t)=>{t.d(r,{Z:()=>Provider});var a=t(52020),l=t.n(a),i=t(88546),d=t.n(i),o=t(99595),s=t.n(o),n=t(66775),c=t.n(n),C=t(2201),u=t.n(C),h=t(57445),p=t.n(h),g=t(26171),v=t(10349),m=t.n(v),y=t(76555),T=t.n(y),I=t(73324),_=t.n(I),S=t(88946),b=t.n(S),A=t(91829),D=t.n(A),E=t(27525),R=t.n(E),f=t(84705),w=t.n(f),M=t(62079),O=t.n(M),L=t(66924),k=t.n(L),N=t(35704),$=t.n(N),B=t(39290),F=t.n(B),P=t(23513),V=t.n(P),H=t(86981),U=t.n(H),K=t(87994),x=t.n(K),j=t(54847),W=t.n(j),G=t(89221),z=t.n(G),Q=t(31082),Y=t.n(Q),X=t(35820),Z=t.n(X),q=t(53706),J=t.n(q),ee=t(90869),re=t.n(ee),te=t(82617),ae=t(46930),le=t(8937),ie=t(20115),de=t(29704),oe=t(15985),se=t(89095),ne=t(39790),ce=t(79243),Ce=t(43077),ue=t(53802),he=t(36612),pe=t.n(he);function ownKeys(e,r){var t=O()(e);if(l()){var a=l()(e);r&&(a=_()(a).call(a,(function(r){return d()(e,r).enumerable}))),t.push.apply(t,a)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t,a,l=null!=arguments[r]?arguments[r]:{};r%2?s()(t=ownKeys(Object(l),!0)).call(t,(function(r){(0,g.Z)(e,r,l[r])})):c()?u()(e,c()(l)):s()(a=ownKeys(Object(l))).call(a,(function(r){p()(e,r,d()(l,r))}))}return e}const ge={[te.eT.TrelloCard]:1,[te.eT.TrelloCustomField]:2,[te.eT.TrelloCheckItem]:3,[te.eT.TrelloTimeRecord]:4},ve={[te.D.Milestone]:1,[te.D.Card]:2},me=[te.eT.TrelloCard,te.eT.TrelloCheckItem,te.eT.TrelloCustomField],ye=[te.eT.TrelloCard,te.eT.TrelloCheckItem,te.eT.TrelloTimeRecord],Te={[te.eT.TrelloCard]:[le.VD.C,le.VD.D,le.VD.E,le.VD.L,...m()(new Array(le.VD.Key9-le.VD.Key0+1),((e,r)=>le.VD.Key0+r)),le.VD.M,le.VD.Space,le.VD.S,le.VD.Delete,le.VD.Backspace],[te.eT.TrelloCustomField]:[le.VD.E,le.VD.L,...m()(new Array(le.VD.Key9-le.VD.Key0+1),((e,r)=>le.VD.Key0+r)),le.VD.M,le.VD.Space,le.VD.S,le.VD.Delete,le.VD.Backspace],[te.eT.TrelloCheckItem]:[le.VD.E,le.VD.L,...m()(new Array(le.VD.Key9-le.VD.Key0+1),((e,r)=>le.VD.Key0+r)),le.VD.M,le.VD.Space,le.VD.Delete,le.VD.Backspace],[te.eT.TrelloTimeRecord]:[le.VD.D,le.VD.L,...m()(new Array(le.VD.Key9-le.VD.Key0+1),((e,r)=>le.VD.Key0+r)),le.VD.M,le.VD.Space,le.VD.Delete,le.VD.Backspace]};class Provider extends oe.Z{get type(){return le.lP.Trello}get integrationService(){return this._trelloIntegrationSrv}get cardsService(){return this._trelloCardsSrv}static get sortOrder(){return[{field:"providerCard.priority",dir:"desc",priority:31},{field:"cardType",dir:"asc",compare:(e,r)=>{let t=ge[e.cardType]-ge[r.cardType];return 0===t&&(t=ve[e.providerCard.cardRole]-ve[r.providerCard.cardRole]),t},priority:32}]}initializeAsync(e){return this._trelloIntegrationSrv.initCurrentCollectionAsync(e)}getCardTemplates(){return ce.vA}getCalendarExtraCardStyle(e){return(0,ce.g4)(e)}getCardTooltipConfig(){return{templateUrl:pe(),controllerName:"trelloCardTooltipCtrl"}}getCardTemplateData(e){return{isReadOnly:e.isReadOnly,cardType:e.cardType,cardRole:e.cardRole,title:e.title,isAllDay:e.isAllDay,start:e.start,realStart:e.realStart,end:e.end,realEnd:e.realEnd,durationMinutes:e.providerCard.durationMinutes,cardNumber:e.providerCard.cardNumber,parentId:e.providerCard.parentId,boardId:e.providerCard.boardId,listId:e.providerCard.listId,isArchived:e.providerCard.isArchived,isCompleted:e.providerCard.isCompleted,labelIds:m()(e.providerCard.labelIds),memberIds:m()(e.providerCard.memberIds),estimationHours:e.providerCard.estimationHours,totalTimeRecordDurationHours:e.providerCard.totalTimeRecordDurationHours,priority:e.providerCard.priority}}getCardEditorHtml(){return'\n            <pw-trello-card-editor\n                class="pw-dialog-edit-card__editor"\n                calendar-card="$ctrl.calendarCard"\n                card-types="$ctrl.cardTypes"\n                is-detailed="$ctrl.isDetailed"\n                force-detailed-mode="$ctrl.forceDetailedMode"\n                is-dense="$ctrl.isDense"\n                has-changes="$ctrl.hasChanges"\n                dialog-opener-context="$ctrl.openerContext"\n                scroll-to-comment-id="$ctrl.scrollToCommentId"\n            ></pw-trello-card-editor>\n        '}getCardContextMenuHtml(){return'\n            <pw-trello-card-context-menu\n                source="$ctrl.source"\n                on-set-context-menu="$ctrl.onSetContextMenu"\n            ></pw-trello-card-context-menu>\n        '}getWorkPanelHtml(){return'\n            <pw-trello-work-panel\n                class="pw-work-panel-trello"\n                is-work-panel-width-compact="$ctrl.isWorkPanelWidthCompact"\n            ></pw-trello-work-panel>\n        '}getWorkPanelCalloutConfig(){return{title:this._$translate.instant("MISC.WORK_PANEL_CALLOUT_TITLE"),text:this._$translate.instant("MISC.WORK_PANEL_CALLOUT_TEXT"),buttonText:this._$translate.instant("BUTTONS.ADD_ACCOUNT_TRELLO"),buttonIcon:"icons-24:trello-colorful"}}isWorkPanelAvailable(){return this._planywayIntegrationSrv.getPrimaryAccount().accountType===te.Qm.Trello}getCalendarsPickerHtml(){return'\n            <pw-trello-calendars-picker\n                account="$ctrl.account"\n                calendars="$ctrl.calendars"\n                filter-text="$ctrl.filterText"\n            ></pw-trello-calendars-picker>\n        '}getCardId(e){return(0,ne.Jd)(e.trelloCard.id)}getCalendarCardClass(){return ne.fb}isMilestonesSupported(){return!0}scrollToCard(e,r){var t,a,l,i,d,o,s;let n,c,C=!1,u=null!=r?r:this._appCommonSrv.getSchedulerMode();if(e.cardRole===te.D.Milestone)this._collectionSettings.global.settings.isMilestonesShown||(this._collectionSettings.global.settings.isMilestonesShown=!0,C=!0);if(r&&this._appCommonSrv.getSchedulerMode()!==u){let e=le.lv[u];if(e&&!this._licenseSrv.checkPaidFeatureAvailable(e,!0))return;this._collectionSettings.global.settings.schedulerMode=u,this._$rootScope.$broadcast(le.FK.ChangeSchedulerViewRequested,{forceUpdate:!0}),C=!0}let h=this._appCommonSrv.getExpandedLayoutPanel();h&&h!==le.sF.Scheduler&&this._appCommonSrv.setExpandedLayoutPanel(null);let p=this._collectionSettings.global.settings.schedulerModesSettings;if(null!==(t=p[r])&&void 0!==t&&t.isDisabled&&(p[r]=_objectSpread(_objectSpread({},p[r]),{},{isDisabled:!1}),C=!0),this._collectionSettings.global.settings.showWorkDays){(0,de.ET)(e.start,{start:this._userSettings.global.settings.workWeekStart,end:this._userSettings.global.settings.workWeekEnd})||(this._collectionSettings.global.settings.showWorkDays=!1,this._$rootScope.$broadcast(le.FK.ChangeSchedulerViewRequested,{forceUpdate:!0}),C=!0)}if(u===le.rW.Timeline)switch(c=this._appCommonSrv.getTimelineResourcesType(),e.cardRole){case te.D.Card:let r=this._collectionSettings.global.settings.timelineHiddenResources[c];switch(c){case le.y.Members:let t=T()(a=_()(l=b()(i=m()(e.providerCard.memberIds)).call(i,(r=>this._trelloIntegrationSrv.getTrelloMemberById(e.accountId,r)))).call(l,(e=>e))).call(a,de.Yb);for(let e of t)D()(r).call(r,e.id)&&(r=_()(r).call(r,(r=>r!==e.id)),C=!0);0===t.length&&D()(r).call(r,ie.$d)&&(r=_()(r).call(r,(e=>e!==ie.$d)),C=!0),n=0!==t.length?t[0].id:ie.$d;break;case le.y.Calendars:D()(r).call(r,e.providerCard.boardId)&&(r=_()(r).call(r,(r=>r!==e.providerCard.boardId)),C=!0),n=e.providerCard.boardId;break;case le.y.Lists:D()(r).call(r,e.providerCard.listId)&&(r=_()(r).call(r,(r=>r!==e.providerCard.listId)),C=!0),n=e.providerCard.listId;break;case le.y.Labels:let c=T()(d=_()(o=b()(s=m()(e.providerCard.labelIds)).call(s,(r=>this._trelloIntegrationSrv.getTrelloLabelById(e.accountId,r)))).call(o,(e=>e))).call(d,de.G4);for(let e of c){let t=(0,de.uz)(e);D()(r).call(r,t)&&(r=_()(r).call(r,(e=>e!==t)),C=!0)}0===c.length&&D()(r).call(r,ie.$d)&&(r=_()(r).call(r,(e=>e!==ie.$d)),C=!0),n=0!==c.length?(0,de.uz)(c[0]):ie.$d;break;case le.y.NoResources:n=ie.xp}n!==ie.xp&&(this._collectionSettings.global.settings.timelineHiddenResources[c]=r);break;case te.D.Milestone:n=ie.iF}C&&(this._collectionSettings.global.saveAsync(),c&&this._$rootScope.$broadcast(le.FK.TimelineResourcesReloaded,{resourcesType:c})),this._$rootScope.$broadcast(le.FK.ScrollSchedulerViewRequested,{scrollToDate:e.start,navigationMode:le.vt.DateSelect,resourceId:n}),this._trelloCardsSrv.setCalendarCardIgnoreFilters(e),this._calendarCardsSrv.updateCalendarCardAsync(e),this._$rootScope.$broadcast(le.FK.SelectCardsRequested,{calendarCardIds:[e.id]})}get _licenseSrv(){return this._licenseSrvLazy||(this._licenseSrvLazy=this._$injector.get("licenseSrv")),this._licenseSrvLazy}get _planywayNotificationsSrv(){return this._planywayNotificationsSrvLazy||(this._planywayNotificationsSrvLazy=this._$injector.get("planywayNotificationsSrv")),this._planywayNotificationsSrvLazy}get _trelloIntegrationSrv(){return this._trelloIntegrationSrvLazy||(this._trelloIntegrationSrvLazy=this._$injector.get("trelloIntegrationSrv")),this._trelloIntegrationSrvLazy}get _trelloCardsSrv(){return this._trelloCardsSrvLazy||(this._trelloCardsSrvLazy=this._$injector.get("trelloCardsSrv")),this._trelloCardsSrvLazy}_ngBootstrap(){super._ngBootstrap();let e=this._$injector.get("$showdownProvider");if(e){var r;if(!R()(r=e.getOption("extensions")).call(r,(e=>"function"==typeof e&&"mentionedMemberAvatar"===e.name))){const r=kendo.template(w()('\n                <span class="pw-markdown-mentioned-member">\n                    @#= data.fullName #\n                </span>\n                ').call('\n                <span class="pw-markdown-mentioned-member">\n                    @#= data.fullName #\n                </span>\n                '),{useWithBlock:!1}),mentionedMemberAvatar=()=>[{type:"output",filter:e=>e.replace(/.?@(\w+)/g,((e,t)=>{if(/(\p{L}|\p{N})@/u.test(e))return e;let a;for(let e of this.getCurrentCollectionConnectedAccountIds())if(a=this._trelloIntegrationSrv.getMemberByUserName(e,t),a)break;if(!a)return e;let l=r(a);return e.replace(/@(\w+)/,l)}))}];e.loadExtension(mentionedMemberAvatar)}}}get accountType(){return te.Qm.Trello}getAccountName(e){var r;return null===(r=this._trelloIntegrationSrv.getTrelloMember(e))||void 0===r?void 0:r.fullName}getAccountEmail(e){var r;return null===(r=this._trelloIntegrationSrv.getTrelloMember(e))||void 0===r?void 0:r.email}getAccountUser(e){return this._trelloIntegrationSrv.getTrelloMember(e)}getAccountUserAsync(e){return this._trelloIntegrationSrv.getTrelloMemberAsync(e)}getCurrentCollectionConnectedCalendarIds(e){var r,t;let a=b()(r=this.integrationService.getTrelloBoards(e)).call(r,(e=>e.id)),l=(0,de.Bn)(this._collectionSettings.global.settings.calendar,a);return _()(t=O()(l)).call(t,(e=>l[e].isConnected))}getCurrentCollectionConnectedCalendar(e,r){let t=this.integrationService.getTrelloBoardById(e,r),a=this._collectionSettings.global.settings.calendar[r];return t&&a?_objectSpread({calendarId:r},a):{accountType:te.Qm.Trello,calendarId:r,isConnected:!1,isSelected:!1,showOnlyMyCards:!1}}getCurrentCollectionConnectedCalendars(e){var r,t,a;let l=b()(r=this.integrationService.getTrelloBoards(e)).call(r,(e=>e.id)),i=(0,de.Bn)(this._collectionSettings.global.settings.calendar,l),d=this._planywayIntegrationSrv.getConnectedAccountById(e),o=0;return b()(t=_()(a=O()(i)).call(a,(e=>i[e].isConnected))).call(t,(e=>{let r=_objectSpread({calendarId:e},i[e]);return r.isSelected&&(d.isPrimary||this._licenseSrv.checkPaidFeatureAvailable(le.ZV.TrelloConnect,!1)?(o+=1,this._licenseSrv.checkPaidFeatureAvailable(le.ZV.MultiBoard,!1,{paidCalendarsCount:o})||(i[e].isSelected=!1,r.isSelected=!1)):(r.isSelected=!1,i[e].isSelected=!1)),r}))}getSignalRConnectionParams(e){return{url:`${ie.yx}/trello/${e.trelloMemberId}`,token:e.trelloToken}}getDefaultUserLocalProviderSettings(){return{googleSyncAsFree:!1,googleSyncCompletedCards:!0,googleSyncOnlyMyCards:!1,googleSyncSetEventColorByLabel:!1,googleSyncStatuses:{},lastRemindBefore:10,lastRemindBeforeAllDay:-540}}reduceUserLocalProviderSettings(e){var r,t;if(e)return _objectSpread(_objectSpread({},e),{},{googleSyncStatuses:k()($()(r=_()(t=F()(e.googleSyncStatuses)).call(t,(e=>{let[,r]=e;return r}))).call(r,-1e3))})}getDefaultUserGlobalProviderSettings(){return{boards:{}}}reduceUserGlobalProviderSettings(e){var r;if(e)return _objectSpread(_objectSpread({},e),{},{boards:k()($()(r=F()(e.boards)).call(r,-1e3))})}getDefaultCollectionLocalProviderSettings(){return{editCardDialog:{checklists:{},collapsed:[]},filters:{collapsed:[]},taskLists:{cards:{},lanes:{[le.cT.Kanban]:{},[le.cT.List]:{}},lists:{},showLabelNames:!0}}}reduceCollectionLocalProviderSettings(e){var r,t,a,l,i,d,o,s,n,c;if(e)return _objectSpread(_objectSpread({},e),{},{editCardDialog:_objectSpread(_objectSpread({},e.editCardDialog),{},{checklists:k()($()(r=_()(t=F()(e.editCardDialog.checklists)).call(t,(e=>{let[,{hideCompleted:r,isCollapsed:t}]=e;return t||r}))).call(r,-1e3))}),taskLists:_objectSpread(_objectSpread({},e.taskLists),{},{cards:k()($()(a=_()(l=F()(e.taskLists.cards)).call(l,(e=>{let[,{isCheckItemsExpanded:r}]=e;return r}))).call(a,-1e3)),lanes:{[le.cT.Kanban]:k()($()(i=_()(d=F()(e.taskLists.lanes[le.cT.Kanban])).call(d,(e=>{let[,{isCollapsed:r}]=e;return r}))).call(i,-500)),[le.cT.List]:k()($()(o=_()(s=F()(e.taskLists.lanes[le.cT.List])).call(s,(e=>{let[,{isCollapsed:r}]=e;return r}))).call(o,-500))},lists:k()($()(n=_()(c=F()(e.taskLists.lists)).call(c,(e=>{let[,{isCollapsed:r}]=e;return r}))).call(n,-1e3))})})}getDefaultCollectionGlobalProviderSettings(){return{cardColorBy:le.dr.FirstLabel,contextBoardId:null,customFieldsAsCards:[],filters:{customFields:[],customFilters:[],labels:[],lists:[],members:[]},reports:{selectedGrouping:[se.I4.Board,se.I4.Task],selectedMode:se.Hm.TrackedTime},taskLists:{boardId:null,filters:{onlyUnscheduled:!1},view:le.cT.Kanban,viewSettings:{[le.cT.Kanban]:{mode:le.e_.None},[le.cT.List]:{mode:le.e_.List}}},defaultTemplate:le.By.MonthlyCalendar}}getDefaultCollectionGlobalExtendedSettings(){return{showCheckItems:!0,showEstimatedHours:!0,showList:!0,showTrackedHours:!0,timelineView:le.tS.Member}}async callRecordsApiAsync(e,r,t,a){try{const{trelloMemberId:l,trelloToken:i}=this._planywayIntegrationSrv.getConnectedAccountById(e);let{success:d,data:o,message:s,code:n,details:c}=await this._restAsync(le.Tu.Post,`${ie.vK}/trello/${l}/control`,t,{token:i,body:{action:r,data:a},useTrelloAuth:!0});if(!d){let e=new Error(s);throw e.code=n,e.details=c,e}return o}catch(e){throw this._$log.error(`${t} error:`),this._$log.error(e),this._telemetrySrv.logError(`${t} error`,e,{class:this.constructor.name,method:this.callRecordsApiAsync.name}),e}}get timeTrackingCardType(){return te.eT.TrelloTimeRecord}canCreateCard(e,r){var t;return r?!this._trelloIntegrationSrv.getTrelloBoardById(e,r).isReadOnly:R()(t=this.getCurrentCollectionSelectedCalendarIds(e)).call(t,(r=>!this._trelloIntegrationSrv.getTrelloBoardById(e,r).isReadOnly))}isTimeTrackingAvailable(){return!0}getMainToolbarRightHtml(){return'\n            <pw-trello-main-toolbar-right\n                class="pw-main-toolbar__provider-toolbar"\n            ></pw-trello-main-toolbar-right>\n        '}getMainToolbarFiltersMenuHtml(){return'\n            <pw-trello-main-toolbar-filters-menu\n                class="pw-scheduler-toolbar__provider-menu"\n                filters-menu-opened="::$mdMenuIsOpen || undefined"\n                filters-search-string="$ctrl.filtersSearchString"\n                register-filter-provider="$ctrl.registerFilterProvider(providerType, filterProvider)"\n            ></pw-trello-main-toolbar-filters-menu>\n        '}getSchedulerToolbarViewSettingsMenuHtml(){return'\n            <pw-trello-scheduler-toolbar-view-settings-menu\n                class="pw-scheduler-toolbar__provider-menu"\n            ></pw-trello-scheduler-toolbar-view-settings-menu>\n        '}getSupportedSchedulerModes(){return[{get value(){return le.ud.Calendar},set value(e){},title:this._$translate.instant("BUTTONS.CALENDAR")},{get value(){return le.ud.Timeline},set value(e){},title:this._$translate.instant("BUTTONS.TIMELINE")},{get value(){return le.ud.TimeTracking},set value(e){},title:this._$translate.instant("BUTTONS.TIME_TRACKING")},{get value(){return le.ud.Reports},set value(e){},title:this._$translate.instant("BUTTONS.REPORTS")},{get value(){return le.ud.Board},set value(e){},title:this._$translate.instant("BUTTONS.BOARD")}]}getSupportedTimelineViews(){return[{value:le.tS.Member,icon:"icons-16:timeline-members-outline",title:this._$translate.instant("MENU.MEMBERS"),order:20},{value:le.tS.Label,icon:"icons-16:timeline-labels-outline",title:this._$translate.instant("MENU.LABELS"),order:30},{value:le.tS.Board,icon:"icons-16:timeline-calendars-outline",title:this._$translate.instant("MENU.BOARDS"),order:40},{value:le.tS.List,icon:"icons-16:timeline-lists-outline",title:this._$translate.instant("MENU.LISTS"),order:50},{value:le.tS.None,icon:"icons-16:timeline-no-grouping-outline",title:this._$translate.instant("MENU.NO_GROUPING"),order:60}]}getViewSettingsMenuFieldItems(){const e=this;return[{group:"trelloColorBy",type:"multiple",title:this._$translate.instant("MENU.CARD_FIELD_COLOR_BY"),get availableOptions(){return e._viewSettingsMenuAvailableTrelloCardColorBy||(e._viewSettingsMenuAvailableTrelloCardColorBy=[{value:le.dr.FirstLabel,name:e._$translate.instant("MENU.CARD_FIELD_COLOR_BY_FIRST_LABEL")},{value:le.dr.Board,name:e._$translate.instant("MENU.CARD_FIELD_COLOR_BY_BOARD")},{value:le.dr.NoColor,name:e._$translate.instant("MENU.CARD_FIELD_COLOR_BY_NO_COLOR")}]),e._viewSettingsMenuAvailableTrelloCardColorBy},get option(){return e._collectionSettings.global.settings.provider[le.lP.Trello].cardColorBy},set option(r){e._collectionSettings.global.settings.provider[le.lP.Trello].cardColorBy=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.CardColorByChanged)},get isAvailable(){return!0}},{group:"dates",type:"single",title:this._$translate.instant("MENU.CARD_FIELD_DATES"),get state(){return e._collectionSettings.global.settings.showDates},set state(r){e._collectionSettings.global.settings.showDates=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.ShowDatesChanged)},get isAvailable(){switch(e._appCommonSrv.getSchedulerView()){case le.rW.Month:case le.rW.Timeline:return!0;default:return!1}}},{group:"calendar",type:"single",title:this._$translate.instant("MENU.CARD_FIELD_BOARD"),get state(){return e._collectionSettings.global.settings.showCalendar},set state(r){e._collectionSettings.global.settings.showCalendar=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.ShowCalendarChanged)},get isAvailable(){return!0}},{group:"trelloList",type:"single",title:this._$translate.instant("MENU.CARD_FIELD_LIST"),get state(){return e._collectionSettings.global.settings.showList},set state(r){e._collectionSettings.global.settings.showList=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.ShowTrelloListChanged)},get isAvailable(){return!0}},{group:"trelloEstimation",type:"single",title:this._$translate.instant("MENU.CARD_FIELD_ESTIMATION"),get state(){return e._collectionSettings.global.settings.showEstimatedHours},set state(r){e._collectionSettings.global.settings.showEstimatedHours=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.ShowEstimatedHoursChanged)},get isAvailable(){switch(e._appCommonSrv.getSchedulerMode()){case le.ud.Calendar:case le.ud.Timeline:return!0;default:return!1}}},{group:"trelloTrackedTime",type:"single",title:this._$translate.instant("MENU.CARD_FIELD_TRACKED_TIME"),get state(){return e._collectionSettings.global.settings.showTrackedHours},set state(r){e._collectionSettings.global.settings.showTrackedHours=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.ShowTrackedHoursChanged)},get isAvailable(){switch(e._appCommonSrv.getSchedulerMode()){case le.ud.Calendar:case le.ud.Timeline:return!0;default:return!1}}},{group:"trelloCheckItems",type:"single",title:this._$translate.instant("MENU.CARD_FIELD_CHECK_ITEMS"),get state(){return e._collectionSettings.global.settings.showCheckItems},set state(r){e._collectionSettings.global.settings.showCheckItems=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.ShowCheckItemCountChanged)},get isAvailable(){return!0}},{group:"trelloNumber",type:"single",title:this._$translate.instant("MENU.CARD_FIELD_NUMBER"),get state(){return e._collectionSettings.global.settings.showCardNumber},set state(r){e._collectionSettings.global.settings.showCardNumber=r,e._$rootScope.$broadcast(le.FK.CardsFieldsSettingsChanged),e._collectionSettings.global.saveAsync(),e._telemetrySrv.logSessionEvent(le.cN.SettingsEvents.ShowCardNumberChanged)},get isAvailable(){return!0}}]}async addTimeRecordManuallyAsync(e){try{this._telemetrySrv.logSessionEvent(le.cN.CardEvents.TimeRecordScheduled,{accountId:e.parentCard.accountId,calendarId:e.parentCard.calendarId,cardType:te.eT.TrelloTimeRecord,cardRole:te.D.Card,isAllDay:e.isDuration,start:e.from,end:e.to,memberIds:new(V())([this._getAccountMemberId(e.parentCard.accountId)]),isAssignedToMe:!0,isDuration:e.isDuration,durationMinutes:e.durationMinutes,where:le.a6.Scheduler,by:le.AH.Manually}),await this._calendarCardsSrv.createCalendarCardTimeRecordAsync(e.parentCard,{comment:e.comment,isDuration:e.isDuration,from:e.from,to:e.to,durationMinutes:e.durationMinutes,memberId:this._getAccountMemberId(e.parentCard.accountId)})}catch(e){this._$log.error("Planyway time entry creating error:"),this._$log.error(e),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.CREATE_TRELLO_TIME_RECORD_CARD_ERROR"),le.k$.Error)}return!0}getTimerParentCardByIdAsync(e,r){return this._calendarCardsSrv.getCalendarCardByIdAsync(e,te.eT.TrelloCard,r)}async createTimeRecordCardByTimerAsync(e){let r=await this.getTimerParentCardByIdAsync(e.accountId,e.parentId);var t;if(!r||r.isReadOnly||r.providerCard.isArchived)return this._$rootScope.$broadcast(le.FK.CreateCalendarCardRequested,{providerType:le.lP.Trello,accountId:e.accountId,calendarId:null==r||null===(t=r.providerCard)||void 0===t?void 0:t.boardId,cardType:te.eT.TrelloTimeRecord,cardRole:te.D.Card,by:le.AH.Timer,hasChanges:!0,isAllDay:!1,startDate:e.startDate,endDate:e.endDate}),!0;try{let t=(0,de.CX)(e.startDate,e.endDate);this._telemetrySrv.logSessionEvent(le.cN.CardEvents.TimeRecordScheduled,{accountId:r.accountId,calendarId:r.calendarId,cardType:te.eT.TrelloTimeRecord,cardRole:te.D.Card,isAllDay:!1,start:e.startDate,end:e.endDate,memberIds:new(V())(this._getAccountMemberId(e.accountId)),isAssignedToMe:!0,isDuration:!1,durationMinutes:t,where:le.a6.Scheduler,by:le.AH.Timer});let a=await this._calendarCardsSrv.createCalendarCardTimeRecordAsync(r,{comment:e.comment,isDuration:!1,from:e.startDate,to:e.endDate,durationMinutes:t,memberId:this._getAccountMemberId(e.accountId)}),l=this._calendarCardsSrv.getCalendarCardById(e.accountId,te.eT.TrelloTimeRecord,a.id);l&&!l.isReadOnly&&this._calendarCardsSrv.isCalendarCardLoaded(l)&&(async()=>{this.logCardEvent(l,le.cN.CardEvents.EditDialogOpened,{where:le.a6.Scheduler,by:le.AH.Timer}),await this._dialogSrv.showEditCardDialogAsync(l)||this.logCardEvent(l,le.cN.CardEvents.EditDialogClosed,{where:le.a6.Scheduler,by:le.AH.Timer})})()}catch(e){this._$log.error("Planyway time entry creating error:"),this._$log.error(e),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.CREATE_TRELLO_TIME_RECORD_CARD_ERROR"),le.k$.Error)}return!0}static getSidebarPanelHtml(){return'\n            <pw-trello-sidebar-panel\n                class="pw-provider-sidebar-panel"\n            ></pw-trello-sidebar-panel>\n        '}getNewCardObjectProviderCard(e,r){var t,a;let l={accountId:e.accountId,cardType:e.cardType,cardRole:e.cardRole,boardId:e.calendarId};if(this._appCommonSrv.getSchedulerView()===le.rW.Timeline){let i=e.lastSlot;if(e.cardRole===te.D.Card){let a=i.resources,d=this._appCommonSrv.getTimelineResourcesType();switch(d){case le.y.Members:l.memberIds=new(V())(a.providerCard.memberIds);break;case le.y.Lists:l.listId=a.providerCard.listId;break;case le.y.Labels:let o=U()(t=r.resources).call(t,(e=>e.name===d)),s=o.field,n=o.defaultFieldValue,c=(o.multiple?(0,de._M)(a,s,n)[0]:(0,de._M)(a,s,n))===ie.$d?ie.$d:this._trelloIntegrationSrv.getOrCreateTrelloLabel(e.accountId,e.calendarId,{color:i.labelColor,name:i.labelName}).id;l.labelIds=new(V())([c])}}let d=r.view();l[d.getCardSortOrderField()]=null!==(a=e.sortOrder)&&void 0!==a?a:d.getNewCardSortOrder(e.firstSlot,i)}return l}getTimelineResourceTemplates(){return ue.Fr}getTimelineResourcesByType(e,r){var t;let a=[];if(!this._trelloIntegrationSrv.isCurrentCollectionInitialized)return a;const l=this._collectionSettings.global.settings.timelineHiddenResources[r],i=x()(t=this.getCurrentCollectionConnectedAccountIds()).call(t,(e=>{let r=this.getCurrentCollectionSelectedCalendarIds(e);return b()(r).call(r,(r=>this._trelloIntegrationSrv.getTrelloBoardById(e,r)))}));let d=this._getAccountMemberId(e);switch(r){case le.y.Members:a.push({id:ie.$d,accountTypes:[te.Qm.Trello],accountIds:[e],calendarIds:b()(i).call(i,(e=>e.id)),type:r,getProvider:()=>this,name:this._$translate.instant("MISC.UNASSIGNED_MEMBER_FULL_NAME"),isSelected:!D()(l).call(l,ie.$d),resourceData:{},iconHtml:Ce.TG(e,ie.$d)});const t=this._licenseSrv.getMaxMemberLanes();let s=new(V());for(let n of i){var o;let i=T()(o=[...n.members]).call(o,((e,r)=>e.id===d?-1:r.id===d?1:0));for(let o of i){let i=!D()(l).call(l,o.id);i&&(s.add(o.id),void 0!==t&&(1===t?i=o.id===d:t-s.size<0&&(i=!1))),a.push({id:o.id,accountTypes:[te.Qm.Trello],accountIds:[e],calendarIds:[n.id],type:r,getProvider:()=>this,name:o.fullName,isSelected:i,resourceData:{avatarUrl:o.avatarUrlNormal,initials:o.initials,memberColorHash:(0,de.mI)(o.id)},iconHtml:Ce.TG(e,o.id)})}}break;case le.y.Calendars:for(let t of i)a.push({id:t.id,accountTypes:[te.Qm.Trello],accountIds:[e],calendarIds:[t.id],type:r,getProvider:()=>this,name:t.name,isSelected:!D()(l).call(l,t.id),resourceData:{calendarType:le.kK.TrelloBoard,calendarColor:t.boardColor,boardImageUrl:t.boardImageUrls[le.yX.Small]},iconHtml:Ce.rg(e,t.id)});break;case le.y.Lists:for(let t of i)for(let i of t.lists)a.push({id:i.id,accountTypes:[te.Qm.Trello],accountIds:[e],calendarIds:[t.id],type:r,getProvider:()=>this,name:i.name,isSelected:!D()(l).call(l,i.id),resourceData:{boardId:i.boardId,boardName:t.name,boardColor:t.boardColor,boardImageUrl:t.boardImageUrls[le.yX.Small]},iconHtml:Ce.rn(e,t.id)});break;case le.y.Labels:a.push({id:ie.$d,accountTypes:[te.Qm.Trello],accountIds:[e],calendarIds:b()(i).call(i,(e=>e.id)),type:r,getProvider:()=>this,name:this._$translate.instant("MISC.NO_LABEL"),isSelected:!D()(l).call(l,ie.$d),resourceData:{color:"default"},iconHtml:Ce.L0("default")});let n=new(W());for(let t of i)for(let a of t.labels){let i=(0,de.uz)(a);n.get(i)||n.set(i,{id:i,accountTypes:[te.Qm.Trello],accountIds:[e],calendarIds:[t.id],type:r,getProvider:()=>this,name:a.name||this._$translate.instant(a.color?le.y_[a.color]:"MISC.LABEL_COLOR_NO_COLOR"),isSelected:!D()(l).call(l,i),resourceData:{name:a.name,color:a.color},iconHtml:Ce.L0(a.color)})}a.push(...z()(n).call(n))}return T()(a).call(a,((t,a)=>{switch(r){case le.y.Members:if(t.id===ie.$d)return-1;if(a.id===ie.$d)return 1;if(t.id===d)return-1;if(a.id===d)return 1;break;case le.y.Lists:let r=this._trelloIntegrationSrv.getTrelloListById(e,t.id),l=this._trelloIntegrationSrv.getTrelloBoardById(e,r.boardId),i=this._trelloIntegrationSrv.getTrelloListById(e,a.id),o=this._trelloIntegrationSrv.getTrelloBoardById(e,i.boardId);return(0,de.H9)(_objectSpread(_objectSpread({},r),{},{boardName:l.name}),_objectSpread(_objectSpread({},i),{},{boardName:o.name}));case le.y.Labels:return t.id===ie.$d?-1:a.id===ie.$d?1:(0,de.G4)(t.resourceData,a.resourceData)}return(0,de.A5)(t.name,a.name)||(0,de.A5)(t.id,a.id)}))}getTimelineResourcesMenuByType(e,r){let t=this._trelloIntegrationSrv.getTrelloMember(e).fullName,a="icons-16:trello";switch(r){case le.y.Members:return{title:this._$translate.instant("BUTTONS.MEMBERS"),description:t,icon:a,showAll:{text:this._$translate.instant("MENU.SHOW_ALL_MEMBERS"),icon:"icons-16:members-outline"},showNone:{text:this._$translate.instant("MENU.SHOW_NONE_MEMBERS"),icon:"icons-16:member-outline"},addResources:{text:this._$translate.instant("MENU.ADD_MEMBERS")}};case le.y.Calendars:return{title:this._$translate.instant("BUTTONS.BOARDS"),description:t,icon:a,showAll:{text:this._$translate.instant("MENU.SHOW_ALL_CALENDARS"),icon:"icons-16:timeline-all-calendars-outline"},showNone:{text:this._$translate.instant("MENU.SHOW_NONE_CALENDARS"),icon:"icons-16:timeline-calendars-outline"}};case le.y.Lists:return{title:this._$translate.instant("BUTTONS.LISTS"),description:t,icon:a,showAll:{text:this._$translate.instant("MENU.SHOW_ALL_LISTS"),icon:"icons-16:timeline-all-lists-outline"},showNone:{text:this._$translate.instant("MENU.SHOW_NONE_LISTS"),icon:"icons-16:timeline-lists-outline"}};case le.y.Labels:return{title:this._$translate.instant("BUTTONS.LABELS"),description:t,icon:a,showAll:{text:this._$translate.instant("MENU.SHOW_ALL_LABELS"),icon:"icons-16:timeline-labels-outline"},showNone:{text:this._$translate.instant("MENU.SHOW_NONE_LABELS"),icon:"icons-16:timeline-without-labels-outline"}};default:return{}}}expandTimelineResources(e,r){var t;let a=r.field,l=r.defaultFieldValue;switch(e.cardRole){case te.D.Card:switch(r.name){case le.y.NoResources:return[ie.xp];case le.y.Labels:return this.getLabelHashes(e.accountId,z()(t=(0,de._M)(e,a,l)).call(t));default:let i=(0,de._M)(e,a,l);return r.multiple?i:[i]}case te.D.Milestone:return[ie.iF]}}updateProviderCardDataByTimelineResource(e,r){switch(r.type){case le.y.Members:e.providerCard.memberIds=new(V())([r.id]);break;case le.y.Calendars:e.providerCard.boardId=r.id,this._setEventBoardData(e);break;case le.y.Lists:e.providerCard.boardId=r.resourceData.boardId,this._setEventBoardData(e);break;case le.y.Labels:if(r.id!==ie.$d){let t=this._trelloIntegrationSrv.getOrCreateTrelloLabel(e.accountId,e.providerCard.boardId,{color:r.resourceData.color,name:r.resourceData.name});return e.providerCard.labelIds=new(V())([t.id]),e.providerCard.labelIds}e.providerCard.labelIds=new(V())([ie.$d])}}isEventDataUpdated(e,r,t){return r.providerCard.boardId&&r.providerCard.boardId!==e.providerCard.boardId||r.providerCard.listId&&r.providerCard.listId!==e.providerCard.listId||r.providerCard.memberIds&&!(0,de.cO)([...r.providerCard.memberIds],[...e.providerCard.memberIds])||r.providerCard.labelIds&&!(0,de.cO)([...r.providerCard.labelIds],[...e.providerCard.labelIds])||t&&r.providerCard[t]!==e.providerCard[t]}isOwnCalendarCard(e){return e.providerCard.memberIds.has(this._getAccountMemberId(e.accountId))}isCardContextMenuAvailable(e){return!e.isTempCard}isCardResizeAvailable(e){if(e.isReadOnly)return!1;if(e.cardRole===te.D.Milestone)return!1;switch(e.cardType){case te.eT.TrelloCard:case te.eT.TrelloCheckItem:return!e.providerCard.isArchived;case te.eT.TrelloTimeRecord:return!(e.providerCard.isArchived||e.isAllDay||this._appCommonSrv.getSchedulerView()!==le.rW.OneDay&&this._appCommonSrv.getSchedulerView()!==le.rW.ThreeDay&&this._appCommonSrv.getSchedulerView()!==le.rW.Week);default:return!1}}isCardSatisfiesSchedulerFilters(e){return this._appCommonSrv.getSchedulerMode(!0)===le.ud.TimeTracking?e.cardType===te.eT.TrelloTimeRecord&&this._calendarCardsSrv.isCalendarCardVisible(e,{isForceOnlyMeShown:this._collectionSettings.global.settings.timeTrackingOnlyMe,isForceArchivedShown:!0}):this._calendarCardsSrv.isCalendarCardVisible(e)}canModifyInScheduler(e){let r;if(e.cardRole===te.D.Milestone)r=le.ZV.Milestones;switch(e.cardType){case te.eT.TrelloCheckItem:r=le.ZV.AdvancedChecklists;break;case te.eT.TrelloTimeRecord:r=le.ZV.TimeTracking}return!(r&&!this._licenseSrv.checkPaidFeatureAvailable(r,!0))}canStartMoveInScheduler(e){return!e.isReadOnly&&!e.providerCard.isArchived}canEndMoveInScheduler(e){return!R()(e).call(e,(e=>e.cardRole===te.D.Milestone))||this._licenseSrv.checkPaidFeatureAvailable(le.ZV.Milestones,!0)}canResizeInScheduler(e,r,t){return e.cardType!==te.eT.TrelloTimeRecord||0===(0,de.i2)(r,t)}canUpdateInScheduler(e){return!e.isReadOnly}canSortInScheduler(e){return!e.isReadOnly&&e.isAllDay&&e.cardType!==te.eT.TrelloTimeRecord&&(!(0,ae.I1)(e)||(0,ae.IK)(e))}getMovedEvent(e,r){var t;switch(this._appCommonSrv.getTimelineResourcesType()){case le.y.NoResources:return e;case le.y.Members:let a=this._trelloIntegrationSrv.getTrelloBoardById(e.event.accountId,e.event.providerCard.boardId);return e.resourceId===ie.$d||R()(t=a.members).call(t,(r=>r.id===e.resourceId))?(e.providerCard.memberIds=new(V())([e.resourceId]),e):void this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.TIMELINE_DROP_MEMBER_NOT_EXIST_WARNING",{boardName:re()(a.name,36)}),le.k$.Warning);case le.y.Calendars:return e.providerCard.boardId=e.resourceId,e;case le.y.Lists:return e.providerCard.listId=e.resourceId,e;case le.y.Labels:let l=e.resourceId===ie.$d?ie.$d:this._trelloIntegrationSrv.getOrCreateTrelloLabel(e.event.accountId,e.event.providerCard.boardId,{color:r.color,name:r.name}).id;return e.providerCard.labelIds=new(V())([l]),e}}getCardExtraClasses(e){var r,t,a,l,i,d,o,s;let n=[];switch(e.cardType){case te.eT.TrelloCard:case te.eT.TrelloCustomField:case te.eT.TrelloCheckItem:switch(e.cardRole){case te.D.Card:switch(this._collectionSettings.global.settings.provider[le.lP.Trello].cardColorBy){case le.dr.FirstLabel:let i=T()(r=_()(t=b()(a=m()(e.providerCard.labelIds)).call(a,(r=>this._trelloIntegrationSrv.getTrelloLabelById(e.accountId,r)))).call(t,(r=>r&&e.providerCard.boardId===r.boardId))).call(r,de.G4);n.push(`pw-card--label_${(null===(l=i[0])||void 0===l?void 0:l.color)||"default"}`);break;case le.dr.Board:let d=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,e.providerCard.boardId);n.push(`pw-card--board_${(null==d?void 0:d.color)||"default"}`)}break;case te.D.Milestone:n.push("pw-card--milestone")}e.isTempCard&&n.push("pw-card--temp"),e.providerCard.isArchived&&n.push("pw-card--archived"),e.providerCard.isCompleted&&n.push("pw-card--completed"),n.push(`pw-card--priority_${e.providerCard.priority}`);break;case te.eT.TrelloTimeRecord:switch(n.push("pw-card--time-record"),this._collectionSettings.global.settings.provider[le.lP.Trello].cardColorBy){case le.dr.FirstLabel:let r=T()(i=_()(d=b()(o=m()(e.providerCard.labelIds)).call(o,(r=>this._trelloIntegrationSrv.getTrelloLabelById(e.accountId,r)))).call(d,(r=>r&&e.providerCard.boardId===r.boardId))).call(i,de.G4);n.push(`pw-card--label_${(null===(s=r[0])||void 0===s?void 0:s.color)||"default"}`);break;case le.dr.Board:let t=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,e.providerCard.boardId);n.push(`pw-card--board_${(null==t?void 0:t.color)||"default"}`)}e.providerCard.isArchived&&n.push("pw-card--archived")}if(this._appCommonSrv.getSchedulerView(!0)===le.rW.Timeline)if(this._appCommonSrv.getTimelineResourcesType(!0)===le.y.Members)n.push("pw-card--hidden-members");return n}getHiddenCardElements(){switch(this._appCommonSrv.getSchedulerView(!0)){case le.rW.OneDay:case le.rW.ThreeDay:case le.rW.Week:return{cardNumber:!this._collectionSettings.global.settings.showCardNumber,calendar:!this._collectionSettings.global.settings.showCalendar,taskList:!this._collectionSettings.global.settings.showList,dates:!0,estimation:!this._collectionSettings.global.settings.showEstimatedHours,timeTracking:!this._collectionSettings.global.settings.showTrackedHours,checkItems:!this._collectionSettings.global.settings.showCheckItems};case le.rW.Month:return{cardNumber:!this._collectionSettings.global.settings.showCardNumber,calendar:!this._collectionSettings.global.settings.showCalendar,taskList:!this._collectionSettings.global.settings.showList,dates:!this._collectionSettings.global.settings.showDates,estimation:!this._collectionSettings.global.settings.showEstimatedHours,timeTracking:!this._collectionSettings.global.settings.showTrackedHours,checkItems:!this._collectionSettings.global.settings.showCheckItems};case le.rW.Timeline:switch(this._appCommonSrv.getTimelineResourcesType(!0)){case le.y.NoResources:case le.y.Calendars:case le.y.Lists:case le.y.Labels:return{cardNumber:!this._collectionSettings.global.settings.showCardNumber,calendar:!this._collectionSettings.global.settings.showCalendar,taskList:!this._collectionSettings.global.settings.showList,dates:!this._collectionSettings.global.settings.showDates,estimation:!this._collectionSettings.global.settings.showEstimatedHours,timeTracking:!this._collectionSettings.global.settings.showTrackedHours,checkItems:!this._collectionSettings.global.settings.showCheckItems};case le.y.Members:return{membersIcon:!0,cardNumber:!this._collectionSettings.global.settings.showCardNumber,calendar:!this._collectionSettings.global.settings.showCalendar,taskList:!this._collectionSettings.global.settings.showList,dates:!this._collectionSettings.global.settings.showDates,estimation:!this._collectionSettings.global.settings.showEstimatedHours,timeTracking:!this._collectionSettings.global.settings.showTrackedHours,checkItems:!this._collectionSettings.global.settings.showCheckItems}}}}getCardMemberBackground(e){return(0,de.mI)(e)}getCardCalendarName(e){var r;return null===(r=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,e.providerCard.boardId))||void 0===r?void 0:r.name}getCardTaskListName(e){var r;return null===(r=this._trelloIntegrationSrv.getTrelloListById(e.accountId,e.providerCard.listId))||void 0===r?void 0:r.name}getCardLinks(e){let r=[],t={};for(let r of e){if(!r.data.providerCard.canHaveLinks)continue;let e=r.data.id;e in t?t[e].push(r):t[e]=[r]}for(let e of Y()(t))for(let a of e){let e=this._calendarCardsSrv.getCalendarCardLinks(a.data);if(e)for(let l of e)if(!l.linkError&&t[l.toCardId])for(let e of t[l.toCardId])switch(l.linkType){case le.z7.Blocks:r.push({itemFrom:a,itemTo:e});break;case le.z7.IsBlockedBy:r.push({itemFrom:e,itemTo:a})}}return r}getDragInfo(e,r){if(0===e.length)return{canDrag:!0,allowedCardTypes:[]};if(r===ie.iF)return{canDrag:!0,allowedCardTypes:[te.eT.TrelloCard]};let t=this._appCommonSrv.getTimelineResourcesType();switch(t){case le.y.NoResources:return{canDrag:!0,allowedCardTypes:[te.eT.TrelloCard,te.eT.TrelloCustomField,te.eT.TrelloCheckItem,te.eT.TrelloTimeRecord]};case le.y.Members:{let a=this._appCommonSrv.getTimelineResourceById(t,r);if(R()(e).call(e,(e=>{var r;return!D()(r=a.accountIds).call(r,e.accountId)})))break;let l=[te.eT.TrelloCard,te.eT.TrelloCustomField,te.eT.TrelloCheckItem];return R()(e).call(e,(e=>e.cardType===te.eT.TrelloTimeRecord))&&r!==ie.$d&&l.push(te.eT.TrelloTimeRecord),{canDrag:!0,allowedCardTypes:l}}case le.y.Calendars:{let a=this._appCommonSrv.getTimelineResourceById(t,r);if(R()(e).call(e,(e=>{var r;return!D()(r=a.accountIds).call(r,e.accountId)})))break;let l=this._trelloIntegrationSrv.getTrelloBoardById(a.accountIds[0],r);if(!l||l.isReadOnly)break;return{canDrag:!0,allowedCardTypes:[te.eT.TrelloCard,te.eT.TrelloCustomField]}}case le.y.Lists:{let a=this._appCommonSrv.getTimelineResourceById(t,r);if(R()(e).call(e,(e=>{var r;return!D()(r=a.accountIds).call(r,e.accountId)})))break;let l=this._trelloIntegrationSrv.getTrelloListById(a.accountIds[0],r);if(!l)break;let i=this._trelloIntegrationSrv.getTrelloBoardById(a.accountIds[0],l.boardId);if(!i||i.isReadOnly)break;return{canDrag:!0,allowedCardTypes:[te.eT.TrelloCard,te.eT.TrelloCustomField]}}case le.y.Labels:{let a=this._appCommonSrv.getTimelineResourceById(t,r);if(R()(e).call(e,(e=>{var r;return!D()(r=a.accountIds).call(r,e.accountId)})))break;return{canDrag:!0,allowedCardTypes:[te.eT.TrelloCard,te.eT.TrelloCustomField,te.eT.TrelloCheckItem,te.eT.TrelloTimeRecord]}}}return{canDrag:!1,allowedCardTypes:[]}}getDraggingCard(e,r,t,a){let l=ae.XM,i=e.cardType!==te.eT.TrelloTimeRecord,d=(0,de.bt)(e.realStart,e.realEnd,i?t:void 0);if(e.cardType===te.eT.TrelloTimeRecord)e.isAllDay&&(l=e.providerCard.durationMinutes,d.ms=1e3*e.providerCard.durationMinutes,d.minutes=e.providerCard.durationMinutes);let o={accountId:e.accountId,isOriginCard:e.uid===r.uid,isRecurring:e.isRecurring(),recurrenceId:e.recurrenceId,recurrenceRule:e.recurrenceRule,start:e.realStart,originStart:e.realStart,newStart:e.realStart,end:e.realEnd,originEnd:e.realEnd,newEnd:e.realEnd,isAllDay:e.realIsAllDay,originIsAllDay:e.realIsAllDay,isSingleDate:e.isSingleDate,isMultiDay:()=>e.isMultiDay(),canBeMultiDay:i,defaultDuration:l,durations:d,providerType:e.providerType,providerCard:e.providerCard,cardType:e.cardType,cardRole:e.cardRole,boardId:e.providerCard.boardId};return a&&(o.sortOrder=e.providerCard[a]),o.originDurations=_objectSpread({},o.durations),o}getDraggedCardUpdateData(e,r,t){let a={isOriginCard:e.isOriginCard,start:e.newStart,end:e.newEnd,isAllDay:e.isAllDay,providerType:e.providerType,cardType:e.cardType};return r&&t&&(r===ie.iF?e.cardType!==te.eT.TrelloCard||e.isRecurring||(a.cardRole=te.D.Milestone):(a.resourceId=r,e.cardRole===te.D.Milestone&&(a.cardRole=te.D.Card))),a}getPreviewCard(e){var r,t;let{accountId:a,calendarId:l,cardType:i,cardRole:d,isAllDay:o,start:s,end:n,providerCard:c={}}=e,C=this._trelloIntegrationSrv.getTrelloBoardById(a,c.boardId||l)||{},u={id:ie.$d,accountId:a,isTempCard:!0,providerType:le.lP.Trello,cardType:i,cardRole:d,isAllDay:o,start:s,end:n,providerCard:{cardNumber:c.cardNumber,boardId:C.id,listId:c.listId||C.defaultListId||(null===(r=C.lists)||void 0===r||null===(t=r[0])||void 0===t?void 0:t.id),isCompleted:c.isCompleted,labelIds:c.labelIds||new(V())([ie.$d]),memberIds:c.memberIds||new(V())([ie.$d]),badges:c.badges||{},priority:c.priority}};switch(i){case te.eT.TrelloCard:u.providerCard.estimationHours=c.estimationHours,u.providerCard.totalTimeRecordDurationHours=c.totalTimeRecordDurationHours;break;case te.eT.TrelloCustomField:case te.eT.TrelloCheckItem:u.providerCard.parentId=c.parentId;break;case te.eT.TrelloTimeRecord:u.providerCard.parentId=c.parentId,u.providerCard.durationMinutes=o?0:(0,de.CX)(s,n)}return u}async updateCardByMouseAsync(e,r,t){let a={cardRole:r.cardRole,isAllDay:r.isAllDay,start:r.start,end:r.end,defaultSortOrder:r.providerCard.defaultSortOrder,membersSortOrder:r.providerCard.membersSortOrder,calendarsSortOrder:r.providerCard.calendarsSortOrder,listsSortOrder:r.providerCard.listsSortOrder,labelsSortOrder:r.providerCard.labelsSortOrder};if(r.providerCard.boardId&&r.providerCard.boardId!==e.providerCard.boardId){a.boardId=r.providerCard.boardId,a.listId=null;let t=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,r.providerCard.boardId);a.position=t.defaultCardPosition}else if(r.providerCard.listId&&r.providerCard.listId!==e.providerCard.listId){var l;let t=null===(l=this._trelloIntegrationSrv.getTrelloListById(e.accountId,r.providerCard.listId))||void 0===l?void 0:l.boardId;t!==e.providerCard.boardId&&(a.boardId=t),a.listId=r.providerCard.listId;let i=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,t);a.position=i.defaultCardPosition}if(void 0!==r.isAllDay&&r.isAllDay!==e.isAllDay){let e,t=this._planywayNotificationsSrv.getDefaultReminders(r.isAllDay);t.length>0&&(e=!0),a.notifications=t,a.isSubscribed=e}a.memberIds=r.providerCard.memberIds,a.labelIds=r.providerCard.labelIds;let i=await this._applyRecurrenceActionsAsync([e],{createException:!0,recurringMode:t.recurringMode,telemetryCallback:t.telemetryCallback,[le.f.AllSeries]:async r=>{var t;let l=e.realStart||e.start,i=e.realEnd||e.end,d=null!==(t=r.realIsAllDay)&&void 0!==t?t:r.isAllDay,o=r.realStart||r.start,s=r.realEnd||r.end;if(void 0!==a.isAllDay&&a.isAllDay!==d)if(a.isAllDay){let e=(0,de.i2)((0,de.$Y)(l),a.start);a.start=(0,de.E4)((0,de.$Y)(o),e);let r=(0,de.i2)((0,de.$Y)(i),a.end);a.end=(0,de.E4)((0,de.$Y)(s),r)}else{let e=(0,de.i2)(l,(0,de.$Y)(a.start));a.start=(0,de.E4)((0,de.q_)(o,a.start),e);let r=(0,de.i2)(i,(0,de.$Y)(a.end));a.end=(0,de.E4)((0,de.q_)(s,a.end),r)}else if(d){let e=(0,de.i2)(l,a.start);a.start=(0,de.E4)(o,e);let r=(0,de.i2)(i,a.end);a.end=(0,de.E4)(s,r)}else{let e=(0,de.CX)(l,a.start);a.start=(0,de.mH)(o,e);let r=(0,de.CX)(i,a.end);a.end=(0,de.mH)(s,r)}a.end<a.start&&(a.end=new Date(a.start)),(void 0!==a.isAllDay&&a.isAllDay!==e.isAllDay||a.start&&!(0,de.rs)(a.start,l))&&await this.deleteRecurrenceExceptionsAsync(r)},properties:new(W())([[e.id,a]])});await Z().all(b()(i).call(i,(e=>{try{return e=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id),t.telemetryCallback(e),this._calendarCardsSrv.updateCalendarCardPropertiesAsync(e,a,{immediateUpdate:!0})}catch(e){this._$log.error("Planyway card updating error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway card updating error",e,{class:this.constructor.name,method:this.updateCardByMouseAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.UPDATE_CARD_ERROR"),le.k$.Error)}})))}getUpdateByMouseTelemetry(e,r,t){let a;var l;if(t)a={event:le.cN.CardEvents.Resized,data:{isAllDay:null!==(l=r.isAllDay)&&void 0!==l?l:e.isAllDay,start:r.start,end:r.end}};else if(r.isAllDay!==e.isAllDay||!(0,de.rs)(r.start,e.realStart||e.start)||!(0,de.rs)(r.end,e.realEnd||e.end)||r.providerCard.boardId&&r.providerCard.boardId!==e.providerCard.boardId||r.providerCard.listId&&r.providerCard.listId!==e.providerCard.listId||r.providerCard.memberIds&&!(0,de.cO)([...r.providerCard.memberIds],[...e.providerCard.memberIds])||r.providerCard.labelIds&&!(0,de.cO)([...r.providerCard.labelIds],[...e.providerCard.labelIds])||void 0!==r.providerCard.defaultSortOrder&&r.providerCard.defaultSortOrder===e.providerCard.defaultSortOrder||void 0!==r.providerCard.membersSortOrder&&r.providerCard.membersSortOrder===e.providerCard.membersSortOrder||void 0!==r.providerCard.calendarsSortOrder&&r.providerCard.calendarsSortOrder===e.providerCard.calendarsSortOrder||void 0!==r.providerCard.listsSortOrder&&r.providerCard.listsSortOrder===e.providerCard.listsSortOrder||void 0!==r.providerCard.labelsSortOrder&&r.providerCard.labelsSortOrder===e.providerCard.labelsSortOrder){if(r.cardRole&&r.cardRole!==e.cardRole||r.providerCard.boardId&&r.providerCard.boardId!==e.providerCard.boardId||r.providerCard.listId&&r.providerCard.listId!==e.providerCard.listId||r.providerCard.memberIds&&!(0,de.cO)([...r.providerCard.memberIds],[...e.providerCard.memberIds])||r.providerCard.labelIds&&!(0,de.cO)([...r.providerCard.labelIds],[...e.providerCard.labelIds])){var i,d,o;let t=null!==(i=r.cardRole)&&void 0!==i?i:e.cardRole,l=null!==(d=r.providerCard.memberIds)&&void 0!==d?d:e.providerCard.memberIds;a={event:le.cN.CardEvents.LaneChanged,data:{calendarId:null!==(o=r.providerCard.boardId)&&void 0!==o?o:e.calendarId,cardRole:t,memberIds:l,isAssignedToMe:l.has(this._getAccountMemberId(e.accountId))}}}else if(!(0,de.rs)(r.start,e.realStart||e.start)||!(0,de.rs)(r.end,e.realEnd||e.end)){var s;a={event:le.cN.CardEvents.Moved,data:{isAllDay:null!==(s=r.isAllDay)&&void 0!==s?s:e.isAllDay,start:r.start,end:r.end}}}}else r.isOriginCard&&(void 0===r.providerCard.defaultSortOrder&&void 0===r.providerCard.membersSortOrder&&void 0===r.providerCard.calendarsSortOrder&&void 0===r.providerCard.listsSortOrder&&void 0===r.providerCard.labelsSortOrder||(a={event:le.cN.CardEvents.Reordered}));return a}createCardByExternalCall(e,r,t,a,l,i){var d,o;const{cardType:s,parentId:n,title:c,durationMinutes:C}=i;let u,h;var p,g;(n&&e&&(u=this._calendarCardsSrv.getCalendarCardById(e,te.eT.TrelloCard,n)),e&&r)&&(h=null===(p=this._trelloIntegrationSrv.getTrelloBoardById(e,(null===(g=u)||void 0===g?void 0:g.boardId)||r))||void 0===p?void 0:p.defaultListId);let v={isAllDay:l,start:t,end:a};switch(s){case te.eT.TrelloCard:v.providerCard={boardId:r,listId:h};break;case te.eT.TrelloCheckItem:v.providerCard={boardId:r,listId:(null===(d=u)||void 0===d?void 0:d.providerCard.listId)||h};break;case te.eT.TrelloTimeRecord:v.title=c,v.isAllDay=!!C,v.providerCard={boardId:r,listId:(null===(o=u)||void 0===o?void 0:o.providerCard.listId)||h,parentId:n,durationMinutes:C||(0,de.CX)(t,a),memberIds:new(V())(e?[this._getAccountMemberId(e)]:[])}}return this._calendarCardsSrv.createTempCalendarCard(e,s,v)}createCardByClick(e,r){let t={cardRole:r.cardRole,isAllDay:r.isAllDay,start:r.start,end:r.end,providerCard:{}};if(r.providerCard.boardId)t.providerCard.boardId=r.providerCard.boardId,t.providerCard.listId=r.providerCard.listId;else if(r.providerCard.listId){var a;t.providerCard.boardId=null===(a=this._trelloIntegrationSrv.getTrelloListById(e,r.providerCard.listId))||void 0===a?void 0:a.boardId,t.providerCard.listId=r.providerCard.listId}if(t.providerCard.memberIds=r.providerCard.memberIds,t.providerCard.labelIds=r.providerCard.labelIds,r.cardType===te.eT.TrelloCard){let e,a=this._planywayNotificationsSrv.getDefaultReminders(r.isAllDay);a.length>0&&(e=!0),t.providerCard.notifications=a,t.providerCard.isSubscribed=e}return this._calendarCardsSrv.createTempCalendarCard(e,r.cardType,t)}async createCardByDropAsync(e){let r=await this._calendarCardsSrv.getCalendarCardByIdAsync(e.accountId,e.cardType,e.id);if(!r)return;if(r.cardType===te.eT.TrelloCheckItem)if(!this._licenseSrv.checkPaidFeatureAvailable(le.ZV.AdvancedChecklists,!0))return!1;if(r.cardRole===te.D.Milestone)if(!this._licenseSrv.checkPaidFeatureAvailable(le.ZV.Milestones,!0))return;if(r.recurrenceRule){if(!this._licenseSrv.checkPaidFeatureAvailable(le.ZV.RecurringCards,!0))return;e.isAllDay===r.isAllDay&&(0,de.rs)(e.start,r.start)||await this.deleteRecurrenceExceptionsAsync(r)}let t,a={isAllDay:e.isAllDay,start:e.start,end:e.end};if(e.cardType!==r.cardType&&(a.cardType=e.cardType),e.cardRole!==r.cardRole&&(a.cardRole=e.cardRole),e.providerCard.boardId&&e.providerCard.boardId!==r.providerCard.boardId)a.boardId=e.providerCard.boardId,a.listId=null;else if(e.providerCard.listId&&e.providerCard.listId!==r.providerCard.listId){var l;let t=null===(l=this._trelloIntegrationSrv.getTrelloListById(e.accountId,e.providerCard.listId))||void 0===l?void 0:l.boardId;t!==r.providerCard.boardId&&(a.boardId=t),a.listId=e.providerCard.listId}if(e.providerCard.memberIds){var i,d;let t=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,r.providerCard.boardId);if(R()(i=e.providerCard.memberIds).call(i,(e=>{var r;return e!==ie.$d&&!R()(r=t.members).call(r,(r=>r.id===e))})))return void this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.TIMELINE_DROP_MEMBER_NOT_EXIST_WARNING",{boardName:re()(t.name,36)}),le.k$.Warning);R()(d=e.providerCard.memberIds).call(d,(e=>r.providerCard.memberIds.has(e)))||(a.memberIds=e.providerCard.memberIds)}else e.providerCard.memberIds=new(V())([ie.$d]);if(e.providerCard.labelIds){var o,s;let t=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,r.providerCard.boardId);if(R()(o=e.providerCard.labelIds).call(o,(e=>{var r;return e!==ie.$d&&!R()(r=t.labels).call(r,(r=>r.id===e))})))return void this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.TIMELINE_DROP_LABEL_NOT_EXIST_WARNING",{boardName:re()(t.name,36)}),le.k$.Warning);R()(s=e.providerCard.labelIds).call(s,(e=>r.providerCard.labelIds.has(e)))||(a.labelIds=e.providerCard.labelIds)}else e.providerCard.labelIds=new(V())([ie.$d]);if(e.cardType===te.eT.TrelloCard){let r,t=this._planywayNotificationsSrv.getDefaultReminders(e.isAllDay);t.length>0&&(r=!0),a.notifications=t,a.isSubscribed=r}switch(this._appCommonSrv.getSchedulerView()){case le.rW.OneDay:case le.rW.ThreeDay:case le.rW.Week:t=e.isAllDay?le.SQ.AllDay:le.SQ.NonAllDay;break;case le.rW.Month:t=le.SQ.AllDay;break;case le.rW.Timeline:switch(e.cardRole){case te.D.Card:switch(this._appCommonSrv.getTimelineResourcesType()){case le.y.NoResources:t=le.SQ.NoLane;break;case le.y.Members:t=e.providerCard.memberIds.has(this._getAccountMemberId(e.accountId))?le.SQ.MemberLaneSelf:le.SQ.MemberLane;break;case le.y.Calendars:t=le.SQ.BoardLane;break;case le.y.Lists:t=le.SQ.ListLane;break;case le.y.Labels:t=le.SQ.LabelLane}break;case te.D.Milestone:t=le.SQ.Milestone}}await this._calendarCardsSrv.updateCalendarCardPropertiesAsync(r,a,{immediateUpdate:!0});let n=a.memberIds||r.providerCard.memberIds;this.logCardEvent(e,le.cN.CardEvents.Scheduled,{calendarId:r.calendarId,memberIds:n,isAssignedToMe:n.has(this._getAccountMemberId(e.accountId)),where:le.a6.Scheduler,by:le.AH.Drop,destination:t})}createTimeRecordCardByClick(e,r){let t={isAllDay:r.isAllDay,start:r.start,end:r.end,providerCard:{boardId:r.providerCard.boardId,durationMinutes:r.isAllDay?this._timeTrackingSrv.timeRecordDefaultDurationMinutes:(0,de.CX)(r.start,r.end),memberIds:new(V())([this._getAccountMemberId(e)])}};return this._calendarCardsSrv.createTempCalendarCard(e,te.eT.TrelloTimeRecord,t)}async createTimeRecordCardByDropAsync(e){let r=await this._calendarCardsSrv.getCalendarCardByIdAsync(e.accountId,te.eT.TrelloCard,e.id);if(!r)return;let t=e.isAllDay?this._timeTrackingSrv.timeRecordDefaultDurationMinutes:(0,de.CX)(e.start,e.end);return await this._calendarCardsSrv.createCalendarCardTimeRecordAsync(r,{isDuration:e.isAllDay,from:e.start,to:e.end,durationMinutes:t,memberId:this._getAccountMemberId(e.accountId)}),{parentCard:r,durationMinutes:t}}get availableCardTypes(){return[te.eT.TrelloCard,te.eT.TrelloCheckItem,te.eT.TrelloCustomField,te.eT.TrelloTimeRecord]}get defaultCardType(){return te.eT.TrelloCard}get availableCardRoles(){return[te.D.Card,te.D.Milestone]}get defaultCardRole(){return te.D.Card}copyCardAsTimeRecordAsync(){}getCardTimeDurationText(e){if(e.cardType===te.eT.TrelloTimeRecord)return(0,de.gG)(e.providerCard.durationMinutes)||"0m"}getTotalCardsTimeDurationInDay(e,r){let t=(0,de.$Y)(r),a=(0,de.h3)(r);return J()(e).call(e,((e,r)=>((0,de.mh)(r.start,t,a)&&(e+=r.providerCard.durationMinutes),e)),0)}hasEstimation(e){return e.providerCard.estimationHours}hasTrackedTime(e){return e.providerCard.totalTimeRecordDurationHours}isHotkeyAvailable(e,r,t){var a;if(!D()(a=Te[e.cardType]).call(a,r))return!1;switch(e.cardType){case te.eT.TrelloCard:return!e.isReadOnly&&(!e.providerCard.isArchived||(r===le.VD.C||!(r!==le.VD.Delete&&r!==le.VD.Backspace||!t.shiftKey&&!t.metaKey)));case te.eT.TrelloCustomField:if(e.isReadOnly)return!1;if(!e.providerCard.isArchived){if(r===le.VD.E)return!0;if(r===le.VD.S)return!0;if(r===le.VD.Space||r===le.VD.M)return!0;if(!(r!==le.VD.Delete&&r!==le.VD.Backspace||t.shiftKey||t.metaKey))return!0;if(r>=le.VD.Key0&&r<=le.VD.Key9||r===le.VD.L)return!0}return!1;case te.eT.TrelloCheckItem:if(e.isReadOnly)return!1;if(!e.providerCard.isArchived){if(r===le.VD.E)return!0;if(r===le.VD.Space||r===le.VD.M)return!0;if(r===le.VD.Delete||r===le.VD.Backspace)return!0;if(r>=le.VD.Key0&&r<=le.VD.Key9||r===le.VD.L)return!0}return!1;case te.eT.TrelloTimeRecord:if(e.isReadOnly)return!1;if(!e.providerCard.isArchived){if(r===le.VD.D&&!e.isTempCard)return!0;if(r===le.VD.M)return!0;if(r===le.VD.Space&&!e.providerCard.memberIds.has(this._getAccountMemberId(e.accountId)))return!0;if((r===le.VD.Delete||r===le.VD.Backspace)&&(t.shiftKey||t.metaKey))return!0;if(r>=le.VD.Key0&&r<=le.VD.Key9||r===le.VD.L)return!0}return!1;default:return!1}}updateCardsByHotkey(e,r,t,a,l){let i,d,o,s;switch(a){case le.LP.Scheduler:i=le.a6.Scheduler,d=le.xI.Scheduler;break;case le.LP.TaskLists:i=le.a6.TaskLists,d=le.xI.TaskLists,o=!0,s=!0;break;default:throw new Error(`Unsupported hotkey source: ${a}`)}let n={applyRecurringActionToHead:o,telemetry:{where:i,by:le.AH.Hotkey}};switch(r){case le.VD.C:this.toggleCardsIsArchivedAsync(e,n);break;case le.VD.D:(t.ctrlKey||t.metaKey)&&this.duplicateCardsAsync(e,n);break;case le.VD.E:this.toggleCardsIsCompletedAsync(e,n);break;case le.VD.L:{var c;if(1!==e.length)break;let r=e[0],t=this._trelloIntegrationSrv.getTrelloBoardById(r.accountId,r.providerCard.boardId);if(0===_()(c=t.labels).call(c,(e=>e.id!==ie.$d)).length)return;l.scope().$broadcast(le.FK.OpenNestedContextMenuRequested,{calendarCard:r,nestedMenu:"trello-labels",source:d,sourceElement:l});break}case le.VD.M:{if(1!==e.length)break;let r=e[0];l.scope().$broadcast(le.FK.OpenNestedContextMenuRequested,{calendarCard:r,nestedMenu:"trello-members",source:d,sourceElement:l});break}case le.VD.S:this.toggleCardsIsSubscribedAsync(e,n);break;case le.VD.Space:let a=(0,de.vM)(e,"accountId");for(let[e,r]of a)this.toggleCardsMemberAsync(r,this._getAccountMemberId(e),n);break;case le.VD.Delete:case le.VD.Backspace:n=_objectSpread(_objectSpread({},n),{},{forceConfirm:s}),t.shiftKey||t.metaKey?this.deleteCardsAsync(e,n):this.removeCardDatesAsync(e,n);break;default:if(r>=le.VD.Key0&&r<=le.VD.Key9){let t=this.groupCalendarCardsByLabelKey(e,r);for(let e in t)this.toggleCardsLabelAsync(t[e],e,n)}}}async setCardsPriorityAsync(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let a=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived&&e.providerCard.priority!==r));if(0===a.length)return;let l=await this.getRecurringModeAsync(e,le.aO.Edit,t.applyRecurringActionToHead);if(null===l)return;let telemetryCallback=e=>this.logCardEvent(e,le.cN.CardEvents.PriorityChanged,_objectSpread(_objectSpread({},t.telemetry),{},{priority:r,recurringMode:l}));if(l&&(a=await this._applyRecurrenceActionsAsync(a,{createException:!0,recurringMode:l,telemetryCallback,[le.f.OnlyOccurrence]:e=>{e.providerCard.priority=r},[le.f.ThisAndFollowing]:e=>{e.providerCard.priority=r}}),0===a.length))return;let i=!0;await Z().all(b()(a).call(a,(e=>{try{let t=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(t),this._calendarCardsSrv.updateCalendarCardPropertiesAsync(t,{priority:r})}catch(e){this._$log.error("Planyway card updating error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway card updating error",e,{class:this.constructor.name,method:this.setCardsPriorityAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.UPDATE_CARD_ERROR"),le.k$.Error),i=!1}}))),i&&this._incrementActionCounter()}async toggleCardsLabelAsync(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let a=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived));if(0===a.length)return;let l=await this.getRecurringModeAsync(e,le.aO.Edit,t.applyRecurringActionToHead);if(null===l)return;let telemetryCallback=e=>{let a=e.providerCard.labelIds.has(r)?le.cN.CardEvents.LabelRemoved:le.cN.CardEvents.LabelAdded;this.logCardEvent(e,a,_objectSpread(_objectSpread({},t.telemetry),{},{recurringMode:l}))};if(l&&(a=await this._applyRecurrenceActionsAsync(a,{createException:!0,recurringMode:l,telemetryCallback,[le.f.OnlyOccurrence]:e=>{e.providerCard.labelIds=(0,ne.iG)(e,r)},[le.f.ThisAndFollowing]:e=>{e.providerCard.labelIds=(0,ne.iG)(e,r)}}),0===a.length))return;let i=!0;await Z().all(b()(a).call(a,(e=>{try{let t=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(t),this._calendarCardsSrv.updateCalendarCardPropertiesAsync(t,{labelIds:(0,ne.iG)(t,r)})}catch(e){this._$log.error("Planyway card updating error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway card updating error",e,{class:this.constructor.name,method:this.toggleCardsLabelAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.UPDATE_CARD_ERROR"),le.k$.Error),i=!1}}))),i&&this._incrementActionCounter()}async toggleCardsMemberAsync(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let a=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived));if(0===a.length)return;let l=await this.getRecurringModeAsync(e,le.aO.Edit,t.applyRecurringActionToHead);if(null===l)return;let telemetryCallback=e=>{let a,i,d=!e.providerCard.memberIds.has(r),o=r===this._getAccountMemberId(e.accountId);if(e.cardType===te.eT.TrelloCheckItem)a=this._calendarCardsSrv.getCalendarCardById(e.accountId,te.eT.TrelloCard,e.providerCard.parentId),i=d?le.cN.CardEvents.CheckItemMemberAssigned:le.cN.CardEvents.CheckItemMemberUnassigned;else a=e,i=d?o?le.cN.CardEvents.MemberAssignedSelf:le.cN.CardEvents.MemberAssigned:o?le.cN.CardEvents.MemberUnassignedSelf:le.cN.CardEvents.MemberUnassigned;let s=(0,ne.Pv)(a,r);this.logCardEvent(a,i,_objectSpread(_objectSpread({},t.telemetry),{},{memberIds:s,isAssignedToMe:s.has(this._getAccountMemberId(a.accountId)),recurringMode:l}))};if(l&&(a=await this._applyRecurrenceActionsAsync(a,{createException:!0,recurringMode:l,telemetryCallback,[le.f.OnlyOccurrence]:e=>{e.providerCard.memberIds=(0,ne.Pv)(e,r)},[le.f.ThisAndFollowing]:e=>{e.providerCard.memberIds=(0,ne.Pv)(e,r)}}),0===a.length))return;let i=!0;await Z().all(b()(a).call(a,(e=>{try{let t=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(t),this._calendarCardsSrv.updateCalendarCardPropertiesAsync(t,{memberIds:(0,ne.Pv)(t,r)})}catch(e){this._$log.error("Planyway card updating error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway card updating error",e,{class:this.constructor.name,method:this.toggleCardsMemberAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.UPDATE_CARD_ERROR"),le.k$.Error),i=!1}}))),i&&this._incrementActionCounter()}async toggleCardsIsCompletedAsync(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let t=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived&&e.hasDates));if(0===t.length)return;let a=await this.getRecurringModeAsync(e,le.aO.Edit,r.applyRecurringActionToHead);if(null===a)return;let telemetryCallback=e=>{let t,l,i=e.providerCard.isCompleted;if(e.cardType===te.eT.TrelloCheckItem)t=this._calendarCardsSrv.getCalendarCardById(e.accountId,te.eT.TrelloCard,e.providerCard.parentId),l=i?le.cN.CardEvents.CheckItemMarkedIncompleted:le.cN.CardEvents.CheckItemMarkedCompleted;else t=e,l=i?le.cN.CardEvents.MarkedIncompleted:le.cN.CardEvents.MarkedCompleted;this.logCardEvent(t,l,_objectSpread(_objectSpread({},r.telemetry),{},{recurringMode:a}))};if(a&&(t=await this._applyRecurrenceActionsAsync(t,{createException:!0,recurringMode:a,telemetryCallback,[le.f.OnlyOccurrence]:e=>{e.providerCard.isCompleted=!e.providerCard.isCompleted},[le.f.ThisAndFollowing]:e=>{e.providerCard.isCompleted=!e.providerCard.isCompleted}}),0===t.length))return;let l=!0;await Z().all(b()(t).call(t,(e=>{try{let r=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(r),this._calendarCardsSrv.updateCalendarCardPropertiesAsync(r,{isCompleted:!r.providerCard.isCompleted})}catch(e){this._$log.error("Planyway card updating error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway card updating error",e,{class:this.constructor.name,method:this.toggleCardsIsCompletedAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.UPDATE_CARD_ERROR"),le.k$.Error),l=!1}}))),l&&this._incrementActionCounter()}async convertCheckItemsToToCardsAsync(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let t=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived&&e.cardType===te.eT.TrelloCheckItem));if(0!==t.length)try{var a;this._appCommonSrv.setSchedulerBusy(!0);let e=await Z().all(b()(t).call(t,(async e=>{this.logCardEvent(e,le.cN.CardEvents.CheckItemConverted,r.telemetry);try{var t;let r=this._calendarCardsSrv.getCalendarCardById(e.accountId,te.eT.TrelloCard,e.providerCard.parentId);if(!r)return;let a=null===(t=this._calendarCardsSrv.getCalendarCardChecklists(r))||void 0===t?void 0:U()(t).call(t,(r=>{var t;return R()(t=r.checkItems).call(t,(r=>r.id===e.id))}));if(!a)return;return await this._calendarCardsSrv.convertCalendarCardCheckItemAsync(r,a.id,e.id)}catch(e){this._$log.error("Planyway convert card error"),this._$log.error(e),this._telemetrySrv.logError("Planyway convert card error",e,{class:this.constructor.name,method:this.duplicateCardsAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.CONVERT_CARD_ERROR"),le.k$.Error)}})));this._$rootScope.$broadcast(le.FK.SelectCardsRequested,{calendarCardIds:b()(a=_()(e).call(e,(e=>e))).call(a,(e=>e.id))})}finally{this._appCommonSrv.setSchedulerBusy(!1)}}async toggleCardsIsArchivedAsync(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let t=_()(e).call(e,(e=>!e.isReadOnly));if(0===t.length)return;let a=await this.getRecurringModeAsync(e,le.aO.Edit,r.applyRecurringActionToHead);if(null===a)return;let telemetryCallback=e=>{let t=e.providerCard.isArchived?le.cN.CardEvents.Unarchived:le.cN.CardEvents.Archived;this.logCardEvent(e,t,_objectSpread(_objectSpread({},r.telemetry),{},{recurringMode:a}))};a&&(t=await this._applyRecurrenceActionsAsync(t,{createException:!0,recurringMode:a,telemetryCallback,[le.f.OnlyOccurrence]:e=>{e.providerCard.isArchived=!e.providerCard.isArchived},[le.f.ThisAndFollowing]:e=>{e.providerCard.isArchived=!e.providerCard.isArchived}}),0===t.length)||await Z().all(b()(t).call(t,(e=>{try{let r=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(r),this._calendarCardsSrv.updateCalendarCardPropertiesAsync(r,{isArchived:!r.providerCard.isArchived})}catch(e){this._$log.error("Planyway card updating error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway card updating error",e,{class:this.constructor.name,method:this.toggleCardsIsArchivedAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.UPDATE_CARD_ERROR"),le.k$.Error)}})))}async toggleCardsIsSubscribedAsync(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let t=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived));if(0===t.length)return;let a=await this.getRecurringModeAsync(e,le.aO.Edit,r.applyRecurringActionToHead);if(null===a)return;let telemetryCallback=e=>{let t=e.providerCard.isSubscribed?le.cN.CardEvents.Unsubscribed:le.cN.CardEvents.Subscribed;this.logCardEvent(e,t,_objectSpread(_objectSpread({},r.telemetry),{},{recurringMode:a}))};a&&(t=await this._applyRecurrenceActionsAsync(t,{createException:!0,recurringMode:a,telemetryCallback,[le.f.OnlyOccurrence]:e=>{e.providerCard.isSubscribed=!e.providerCard.isSubscribed},[le.f.ThisAndFollowing]:e=>{e.providerCard.isSubscribed=!e.providerCard.isSubscribed}}),0===t.length)||await Z().all(b()(t).call(t,(e=>{try{let r=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(r),this._calendarCardsSrv.updateCalendarCardPropertiesAsync(r,{isSubscribed:!r.providerCard.isSubscribed})}catch(e){this._$log.error("Planyway card updating error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway card updating error",e,{class:this.constructor.name,method:this.toggleCardsIsSubscribedAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.UPDATE_CARD_ERROR"),le.k$.Error)}})))}async duplicateCardsAsync(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(R()(e).call(e,(e=>!this.canModifyInScheduler(e))))return;let t=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived));if(0!==t.length)try{var a;this._appCommonSrv.setSchedulerBusy(!0);let e=await Z().all(b()(t).call(t,(async e=>{this.logCardEvent(e,le.cN.CardEvents.Duplicated,r.telemetry);try{let r=(0,ae.I1)(e)&&!(0,ae.IK)(e)?this.getRecurrenceHead(e).id:e.id,t=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,r);if(!t)return;switch(t.cardType){case te.eT.TrelloCard:return await this._calendarCardsSrv.createCalendarCardAsync(t.duplicate());case te.eT.TrelloTimeRecord:let e=this._calendarCardsSrv.getCalendarCardById(t.accountId,te.eT.TrelloCard,t.providerCard.parentId);if(!e)return;return await this._calendarCardsSrv.createCalendarCardTimeRecordAsync(e,{comment:t.title,isDuration:t.isAllDay,from:t.start,to:t.end,durationMinutes:t.providerCard.durationMinutes,memberId:this._getAccountMemberId(t.accountId)})}}catch(e){this._$log.error("Planyway duplicate card error"),this._$log.error(e),this._telemetrySrv.logError("Planyway duplicate card error",e,{class:this.constructor.name,method:this.duplicateCardsAsync.name}),this._notificationSrv.showNotification(this._$translate.instant("NOTIFICATIONS.DUPLICATE_CARD_ERROR"),le.k$.Error)}})));this._$rootScope.$broadcast(le.FK.SelectCardsRequested,{calendarCardIds:b()(a=_()(e).call(e,(e=>e))).call(a,(e=>e.id))})}finally{this._appCommonSrv.setSchedulerBusy(!1)}}async removeCardDatesAsync(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=_()(e).call(e,(e=>!e.isReadOnly&&!e.providerCard.isArchived&&e.hasDates));if(0===t.length)return;let a=await this.getRecurringModeAsync(e,le.aO.Remove,r.applyRecurringActionToHead);if(null===a)return;let telemetryCallback=e=>{let t,l;if(e.cardType===te.eT.TrelloCheckItem)t=this._calendarCardsSrv.getCalendarCardById(e.accountId,te.eT.TrelloCard,e.providerCard.parentId),l=le.cN.CardEvents.CheckItemDatesRemoved;else t=e,l=le.cN.CardEvents.DatesRemoved;this.logCardEvent(t,l,_objectSpread(_objectSpread({},r.telemetry),{},{recurringMode:a}))};if(r.forceConfirm||!a)for(let e of me){let r=_()(t).call(t,(r=>r.cardType===e)).length;if(0!==r&&!await this._dialogSrv.showConfirmAsync(this._$translate.instant(this._removeCardDatesMessagesByCardType[e].title),1===r?this._$translate.instant(this._removeCardDatesMessagesByCardType[e].confirm):this._$translate.instant(this._removeCardDatesMessagesByCardType[e].confirmMultiple,{cardsCount:r}),{buttons:[{text:this._$translate.instant("BUTTONS.YES"),isPrimary:!0,isDangerous:!0,dialogResult:!0}],dontAskType:le.Ek.RemoveFromCalendar}))return}a&&(t=await this._applyRecurrenceActionsAsync(t,{createException:!1,recurringMode:a,telemetryCallback,[le.f.AllSeries]:e=>{(async()=>{try{await this._calendarCardsSrv.deleteRecurrenceExceptionsAsync(e.cardType,e)}catch(e){this._$log.error("Planyway delete card exceptions error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway delete card exceptions error",e,{class:this.constructor.name,method:this.removeCardDatesAsync.name})}})()}}),0===t.length)||await Z().all(b()(t).call(t,(e=>{try{let r=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(r),this._calendarCardsSrv.removeCalendarCardAsync(r)}catch(e){this._$log.error("Planyway remove card error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway remove card error",e,{class:this.constructor.name,method:this.removeCardDatesAsync.name}),this._notificationSrv.showNotification(this._$translate.instant(this._removeCardDatesMessagesByCardType[kendoEventsToRemoveDates[0].cardType].error),le.k$.Error)}})))}async deleteCardsAsync(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=_()(e).call(e,(e=>!e.isReadOnly&&D()(ye).call(ye,e.cardType)));if(0===t.length)return;let a=await this.getRecurringModeAsync(e,le.aO.Delete,r.applyRecurringActionToHead);if(null===a)return;let telemetryCallback=e=>{let t,l;if(e.cardType===te.eT.TrelloCheckItem)t=this._calendarCardsSrv.getCalendarCardById(e.accountId,te.eT.TrelloCard,e.providerCard.parentId),l=le.cN.CardEvents.CheckItemDeleted;else t=e,l=le.cN.CardEvents.Deleted;this.logCardEvent(t,l,_objectSpread(_objectSpread({},r.telemetry),{},{recurringMode:a}))};if(r.forceConfirm||!a)for(let e of ye){let r=_()(t).call(t,(r=>r.cardType===e)).length;if(0!==r&&!await this._dialogSrv.showConfirmAsync(this._$translate.instant(this._deleteCardMessagesByCardType[e].title),1===r?this._$translate.instant(this._deleteCardMessagesByCardType[e].confirm):this._$translate.instant(this._deleteCardMessagesByCardType[e].confirmMultiple,{cardsCount:r}),{buttons:[{text:this._$translate.instant("BUTTONS.DELETE"),isPrimary:!0,isDangerous:!0,dialogResult:!0}]}))return}a&&(t=await this._applyRecurrenceActionsAsync(t,{createException:!1,recurringMode:a,telemetryCallback,[le.f.AllSeries]:e=>{(async()=>{try{await this._calendarCardsSrv.deleteRecurrenceExceptionsAsync(e.cardType,e)}catch(e){this._$log.error("Planyway delete card exceptions error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway delete card exceptions error",e,{class:this.constructor.name,method:this.deleteCardsAsync.name})}})()}}),0===t.length)||await Z().all(b()(t).call(t,(e=>{try{let r=this._calendarCardsSrv.getCalendarCardById(e.accountId,e.cardType,e.id);return telemetryCallback(r),this._calendarCardsSrv.deleteCalendarCardAsync(r)}catch(e){this._$log.error("Planyway delete card error:"),this._$log.error(e),this._telemetrySrv.logError("Planyway delete card error",e,{class:this.constructor.name,method:this.deleteCardsAsync.name}),this._notificationSrv.showNotification(this._$translate.instant(this._deleteCardMessagesByCardType[kendoEventsToDelete[0].cardType].error),le.k$.Error)}})))}getThirdPartyUserId(e){return e.trelloMemberId}logCardEvent(e,r){var t;let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this._telemetrySrv.logSessionEvent(r,_objectSpread({accountId:e.accountId,calendarId:e.calendarId,isAllDay:e.isAllDay,start:e.realStart||e.start,end:e.realEnd||e.end,cardType:e.cardType,cardRole:e.cardRole,isNewCard:null!==(t=e.isTempCard)&&void 0!==t&&t,recurrenceRule:e.recurrenceHeadRule||e.recurrenceRule,memberIds:e.providerCard.memberIds,isAssignedToMe:e.providerCard.memberIds.has(this._getAccountMemberId(e.accountId)),priority:e.providerCard.priority,durationMinutes:e.providerCard.durationMinutes},a))}groupCalendarCardsByLabelKey(e,r){let t=le.I[r],a={};for(let r of e){var l;let e=this._trelloIntegrationSrv.getTrelloBoardById(r.accountId,r.providerCard.boardId).labels,i=U()(l=T()(e).call(e,de.G4)).call(l,(e=>e.color===t));i&&(a[i.id]?a[i.id].push(r):a[i.id]=[r])}return a}getCardMembers(e){var r,t,a;return T()(r=_()(t=b()(a=m()(e.providerCard.memberIds)).call(a,(r=>this._trelloIntegrationSrv.getTrelloMemberById(e.accountId,r)))).call(t,(e=>e))).call(r,de.Yb)}getCardLabelsColors(e){var r,t,a,l;return b()(r=T()(t=_()(a=b()(l=m()(e.providerCard.labelIds)).call(l,(r=>this._trelloIntegrationSrv.getTrelloLabelById(e.accountId,r)))).call(a,(r=>r&&e.providerCard.boardId===r.boardId))).call(t,de.G4)).call(r,(e=>e.color))}getLabelHashes(e,r){if(!r)return[ie.$d];let t=[];for(let a of r)if(a===ie.$d)t.push(ie.$d);else{let r=this._trelloIntegrationSrv.getTrelloLabelById(e,a);r&&t.push((0,de.uz)(r))}return t}getCardParentTitle(e){switch(e.cardType){case te.eT.TrelloCheckItem:case te.eT.TrelloTimeRecord:let r=this._calendarCardsSrv.getCalendarCardById(e.accountId,te.eT.TrelloCard,e.providerCard.parentId);return(null==r?void 0:r.title)||""}}getCardCustomFieldName(e){var r;if(e.cardType===te.eT.TrelloCustomField)return null===(r=this._trelloIntegrationSrv.getTrelloCustomFieldById(e.accountId,e.providerCard.trelloCustomFieldId))||void 0===r?void 0:r.name}getCardEstimation(e){if(e.cardType===te.eT.TrelloCard){if(!e.providerCard.estimationHours)return;return`${kendo.toString(e.providerCard.estimationHours)}h`}}getCardTotalTimeRecordDuration(e){if(e.cardType===te.eT.TrelloCard){if(!e.providerCard.totalTimeRecordDurationHours)return;return`${kendo.toString(e.providerCard.totalTimeRecordDurationHours)}h`}}isCardUnderestimated(e){if(e.cardType===te.eT.TrelloCard){if(!e.providerCard.totalTimeRecordDurationHours||!e.providerCard.estimationHours)return;return e.providerCard.totalTimeRecordDurationHours>e.providerCard.estimationHours}}async _onTryOpenCardByLinkAsync(e,r){let t,a,l;switch(r){case le.Un.TimeRecordSeeMore:t=le.a6.Trello,a=le.AH.TrelloPopup,this.logCardEvent(e,le.cN.CardEvents.TimeRecordSeeMoreClicked,{where:t,by:a}),l=!0;break;case le.Un.PlanOnTimeline:t=le.a6.Trello,a=le.AH.PowerUpButton,this.logCardEvent(e,le.cN.CardEvents.PlanOnTimelineClicked,{where:t,by:a}),await this._scheduleCalendarCardAsync(e,{where:t,by:a}),this.scrollToCard(e,le.ud.Timeline),l=!1;break;case le.Un.ViewOnTimeline:t=le.a6.Trello,a=le.AH.PowerUpButton,this.logCardEvent(e,le.cN.CardEvents.ViewOnTimelineClicked,{where:t,by:a}),this.scrollToCard(e,le.ud.Timeline),l=!1;break;default:return}return{where:t,by:a,shouldOpenCard:l}}get _trelloCollectionSettings(){return{local:this._collectionSettings.local.settings.provider[le.lP.Trello],global:this._collectionSettings.global.settings.provider[le.lP.Trello]}}_getAccountMemberId(e){return this._planywayIntegrationSrv.getConnectedAccountById(e).trelloMemberId}get _removeCardDatesMessagesByCardType(){return this._removeCardDatesMessagesByCardTypeLazy||(this._removeCardDatesMessagesByCardTypeLazy={[te.eT.TrelloCard]:{title:"DIALOGS.REMOVE_TRELLO_CARD_DATES_TITLE",confirm:"DIALOGS.REMOVE_TRELLO_CARD_DATES_CONFIRM",confirmMultiple:"DIALOGS.REMOVE_TRELLO_CARD_DATES_CONFIRM_MULTIPLE",error:"NOTIFICATIONS.REMOVE_TRELLO_CARD_ERROR"},[te.eT.TrelloCustomField]:{title:"DIALOGS.REMOVE_TRELLO_CUSTOM_FIELD_CARD_DATES_TITLE",confirm:"DIALOGS.REMOVE_TRELLO_CUSTOM_FIELD_CARD_DATES_CONFIRM",confirmMultiple:"DIALOGS.REMOVE_TRELLO_CUSTOM_FIELD_CARD_DATES_CONFIRM_MULTIPLE",error:"NOTIFICATIONS.REMOVE_TRELLO_CUSTOM_FIELD_CARD_ERROR"},[te.eT.TrelloCheckItem]:{title:"DIALOGS.REMOVE_TRELLO_CHECK_ITEM_CARD_DATES_TITLE",confirm:"DIALOGS.REMOVE_TRELLO_CHECK_ITEM_CARD_DATES_CONFIRM",confirmMultiple:"DIALOGS.REMOVE_TRELLO_CHECK_ITEM_CARD_DATES_CONFIRM_MULTIPLE",error:"NOTIFICATIONS.REMOVE_TRELLO_CHECK_ITEM_CARD_ERROR"}}),this._removeCardDatesMessagesByCardTypeLazy}get _deleteCardMessagesByCardType(){return this._deleteCardMessagesByCardTypeLazy||(this._deleteCardMessagesByCardTypeLazy={[te.eT.TrelloCard]:{title:"DIALOGS.DELETE_TRELLO_CARD_TITLE",confirm:"DIALOGS.DELETE_TRELLO_CARD_CONFIRM",confirmMultiple:"DIALOGS.DELETE_TRELLO_CARD_CONFIRM_MULTIPLE",error:"NOTIFICATIONS.DELETE_TRELLO_CARD_ERROR"},[te.eT.TrelloCheckItem]:{title:"DIALOGS.DELETE_TRELLO_CHECK_ITEM_CARD_TITLE",confirm:"DIALOGS.DELETE_TRELLO_CHECK_ITEM_CARD_CONFIRM",confirmMultiple:"DIALOGS.DELETE_TRELLO_CHECK_ITEM_CARD_CONFIRM_MULTIPLE",error:"NOTIFICATIONS.DELETE_TRELLO_CHECK_ITEM_CARD_ERROR"},[te.eT.TrelloTimeRecord]:{title:"DIALOGS.DELETE_TRELLO_TIME_RECORD_CARD_TITLE",confirm:"DIALOGS.DELETE_TRELLO_TIME_RECORD_CARD_CONFIRM",confirmMultiple:"DIALOGS.DELETE_TRELLO_TIME_RECORDS_CARD_CONFIRM_MULTIPLE",error:"NOTIFICATIONS.DELETE_TRELLO_TIME_RECORD_CARD_ERROR"}}),this._deleteCardMessagesByCardTypeLazy}_setEventBoardData(e){var r,t;let a=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,e.providerCard.boardId);e.providerCard.labelIds=b()(r=e.providerCard.labelIds).call(r,(r=>{if(r===ie.$d)return r;let{color:t,name:a}=this._trelloIntegrationSrv.getTrelloLabelById(e.accountId,r);return this._trelloIntegrationSrv.getOrCreateTrelloLabel(e.accountId,e.providerCard.boardId,{color:t,name:a}).id})),e.providerCard.memberIds=_()(t=e.providerCard.memberIds).call(t,(e=>{var r;return e===ie.$d||!!R()(r=a.members).call(r,(r=>r.id===e))}))}async _scheduleCalendarCardAsync(e,r){let t,a,l,i=this._trelloIntegrationSrv.getTrelloBoardById(e.accountId,e.providerCard.boardId),d=i.defaultCardIsAllDay;d?(t=(0,de.$Y)(new Date),a=(0,de.h3)(t)):(t=(0,de.GG)(new Date,"halfHour"),a=(0,de.mH)(t,i.defaultCardDuration));let o=this._planywayNotificationsSrv.getDefaultReminders(d);o.length>0&&(l=!0),this.logCardEvent(e,le.cN.CardEvents.Scheduled,_objectSpread(_objectSpread({},r),{},{cardType:te.eT.TrelloCard,cardRole:te.D.Card,isAllDay:d,start:t,end:a})),await this._calendarCardsSrv.updateCalendarCardPropertiesAsync(e,{isAllDay:d,start:t,end:a,notifications:o,isSubscribed:l})}_incrementActionCounter(){switch(this._appCommonSrv.getSchedulerMode()){case le.ud.Board:this._onboardingSrv.incrementActionCounter(le.Us.BoardCreate);break;case le.ud.Calendar:this._onboardingSrv.incrementActionCounter(le.Us.CalendarCreate);break;case le.ud.Timeline:this._onboardingSrv.incrementActionCounter(le.Us.TimelineCreate);break;case le.ud.TimeTracking:this._onboardingSrv.incrementActionCounter(le.Us.TimeTrackingCreate)}}}}}]);