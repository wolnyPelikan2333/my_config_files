var kWasmMessageTypes=function(){return{kLoadWasmModule:1,kWriteToMEMFS:2,kReadFromMEMFS:3,kSendToCore:4,kCopyToPrivateFile:5,kHandleWasmMessage:6,kUnsupported:7}}();self.addEventListener("message",handleMessageFromMainThread,!1);var instance_,module_;
function handleMessageFromMainThread(a){a=a.data;switch(a.type){case kWasmMessageTypes.kLoadWasmModule:_api.loadOfficeSuiteWasmModule(a);break;case kWasmMessageTypes.kWriteToMEMFS:_api.writeFileToMEMFS(a);break;case kWasmMessageTypes.kSendToCore:_api.sendToCore(a);break;case kWasmMessageTypes.kReadFromMEMFS:_api.readFileFromMEMFS(a);break;default:postMessage({type:kWasmMessageTypes.kUnsupported,error:err,msgId:a.msgId})}}
var _api={loadOfficeSuiteWasmModule:function(a){document={currentScript:{src:""}};document.currentScript.src=a.url;importScripts("../../wasm/"+a.app+".js");(new Promise(function(a,c){officeSuiteWasmModuleReady().then(function(c){instance_||(module_=c,instance_=new module_.OfficeSuiteWasmModule);a()}).catch(function(a){c(a)})})).then(function(){postMessage({type:kWasmMessageTypes.kLoadWasmModule,msgId:a.msgId})}).catch(function(b){postMessage({type:kWasmMessageTypes.kLoadWasmModule,error:b,msgId:a.msgId})})},
readFileFromMEMFS:function(a){(new Promise(function(b,c){module_||c(Error("WASM module is not initialised"));b(module_.FS.readFile(a.fileName))})).then(function(b){postMessage({type:kWasmMessageTypes.kReadFromMEMFS,msgId:a.msgId,fileContent:b})}).catch(function(b){postMessage({type:kWasmMessageTypes.kReadFromMEMFS,error:b,msgId:a.msgId})})},writeFileToMEMFS:function(a){(new Promise(function(b,c){module_||c(Error("WASM module is not initialised"));module_.FS.writeFile(a.fileName,a.fileContent);b()})).then(function(){postMessage({type:kWasmMessageTypes.kWriteToMEMFS,
msgId:a.msgId})}).catch(function(b){postMessage({type:kWasmMessageTypes.kWriteToMEMFS,error:b,msgId:a.msgId})})},getWasmInstance:function(){instance_||(instance_=new module_.OfficeSuiteWasmModule);return instance_},deleteWasmInstance:function(){instance_.delete()},doLeakCheck:function(){module_.doLeakCheck()},sendToCore:function(a){try{_api.getWasmInstance().HandleMessage(a.buffer)}catch(b){throw b;}},setupListeners:function(){window.addEventListener("wasmPrintErr",this.handleWASMCrash.bind(this),
!0);window.addEventListener("wasmOnAbort",this.handleWASMAbort.bind(this),!0)},handleWASMAbort:function(a){throw Error("WASM Loading Aborted");},handleWASMCrash:function(a){WASMException.handleWASMException(a)}};function _handleWASMMessage(a){postMessage({type:kWasmMessageTypes.kHandleWasmMessage,message:a})}function copyToPrivateFile(){postMessage({type:kWasmMessageTypes.kCopyToPrivateFile})};
